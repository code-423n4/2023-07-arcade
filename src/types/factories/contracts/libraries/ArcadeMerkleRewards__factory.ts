/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ArcadeMerkleRewards,
  ArcadeMerkleRewardsInterface,
} from "../../../contracts/libraries/ArcadeMerkleRewards";

const _abi = [
  {
    inputs: [],
    name: "AA_AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "AA_ClaimingExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "AA_NonParticipant",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "addressType",
        type: "string",
      },
    ],
    name: "AA_ZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "totalGrant",
        type: "uint128",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimAndDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingVault",
    outputs: [
      {
        internalType: "contract INFTBoostVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ArcadeMerkleRewards__factory {
  static readonly abi = _abi;
  static createInterface(): ArcadeMerkleRewardsInterface {
    return new utils.Interface(_abi) as ArcadeMerkleRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArcadeMerkleRewards {
    return new Contract(address, _abi, signerOrProvider) as ArcadeMerkleRewards;
  }
}
